import pygame
import random

# Initialize Pygame
pygame.init()

# Screen settings
WIDTH = 800
HEIGHT = 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pollen Dash")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
YELLOW = (255, 255, 0)
GREEN = (0, 255, 0)

# Bee (BuzzBolt) settings
bee_x = 100
bee_y = HEIGHT // 2
bee_velocity = 0
GRAVITY = 0.5
LIFT = -10
BEE_SIZE = 30

# Flower and Obstacle settings
flower_x = WIDTH
flower_y = random.randint(100, HEIGHT - 100)
flower_size = 40
obstacle_x = WIDTH + 200
obstacle_height = random.randint(100, 300)
obstacle_gap = 200
speed = 5

# Score
score = 0
font = pygame.font.Font(None, 36)

# Game loop
clock = pygame.time.Clock()
running = True

while running:
    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN or (event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE):
            bee_velocity = LIFT

    # Bee movement
    bee_velocity += GRAVITY
    bee_y += bee_velocity
    if bee_y < 0:
        bee_y = 0
        bee_velocity = 0
    if bee_y > HEIGHT - BEE_SIZE:
        bee_y = HEIGHT - BEE_SIZE
        bee_velocity = 0

    # Move flower and obstacle
    flower_x -= speed
    obstacle_x -= speed

    # Respawn flower
    if flower_x < -flower_size:
        flower_x = WIDTH
        flower_y = random.randint(100, HEIGHT - 100)
        flower_size = max(20, flower_size - 2)  # Flowers shrink (minimum size 20)
        speed += 0.2  # Game gets faster
        score += 1

    # Respawn obstacle
    if obstacle_x < -50:
        obstacle_x = WIDTH
        obstacle_height = random.randint(100, 300)
        obstacle_gap = max(150, obstacle_gap - 5)  # Gap shrinks over time

    # Collision detection
    bee_rect = pygame.Rect(bee_x, bee_y, BEE_SIZE, BEE_SIZE)
    flower_rect = pygame.Rect(flower_x, flower_y, flower_size, flower_size)
    obstacle_top = pygame.Rect(obstacle_x, 0, 50, obstacle_height)
    obstacle_bottom = pygame.Rect(obstacle_x, obstacle_height + obstacle_gap, 50, HEIGHT)

    if bee_rect.colliderect(obstacle_top) or bee_rect.colliderect(obstacle_bottom):
        print(f"Game Over! Score: {score}")
        running = False
    if bee_rect.colliderect(flower_rect):
        score += 5
        flower_x = WIDTH  # Move flower off-screen to respawn

    # Drawing
    screen.fill(WHITE)
    pygame.draw.rect(screen, BLACK, (obstacle_x, 0, 50, obstacle_height))  # Top obstacle
    pygame.draw.rect(screen, BLACK, (obstacle_x, obstacle_height + obstacle_gap, 50, HEIGHT))  # Bottom obstacle
    pygame.draw.circle(screen, YELLOW, (bee_x + BEE_SIZE // 2, int(bee_y) + BEE_SIZE // 2), BEE_SIZE // 2)  # Bee
    pygame.draw.circle(screen, GREEN, (flower_x + flower_size // 2, flower_y + flower_size // 2), flower_size // 2)  # Flower
    score_text = font.render(f"Score: {score}", True, BLACK)
    screen.blit(score_text, (10, 10))

    pygame.display.flip()
    clock.tick(60)

pygame.quit()